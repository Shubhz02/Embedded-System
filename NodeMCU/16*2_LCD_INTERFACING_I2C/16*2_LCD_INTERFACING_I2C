Introduction
In this project, we demonstrate how to connect a 16x2 I2C LCD to a NodeMCU (ESP8266) using the LiquidCrystal_I2C library. 
The LCD communicates with the NodeMCU via the I2C protocol, which only requires two wires: SDA and SCL.
The program initializes the LCD and displays a message "Hello, From" on the first row and "NodeMCU!" on the second row.

Working Principle
The I2C LCD is a more efficient way to control the LCD with fewer connections compared to a parallel connection. 
The NodeMCU (ESP8266) communicates with the LCD via the I2C bus, which uses the SDA and SCL pins. The Wire library is used to handle I2C communication, 
while the LiquidCrystal_I2C library is used to control the LCD display.

SDA Pin: Serial Data pin for I2C communication.
SCL Pin: Serial Clock pin for I2C communication.
I2C Address: The LCD is set to address 0x27, which is common for many I2C LCD modules.
Display: The LCD shows a static message on the first and second lines.
Connections for NodeMCU (ESP8266)
To connect the I2C LCD to the NodeMCU (ESP8266), follow these connections:

LCD Pin	NodeMCU Pin
SDA	D6 (GPIO12)
SCL	D7 (GPIO13)
VCC	3.3V
GND	GND
SDA Pin: D6 (GPIO12), connected to the SDA pin of the LCD.
SCL Pin: D7 (GPIO13), connected to the SCL pin of the LCD.
VCC Pin: Connect the VCC pin of the LCD to 3.3V on the NodeMCU (not 5V, since the NodeMCU operates at 3.3V logic).
GND Pin: Connect the GND pin of the LCD to GND on the NodeMCU.


Code Explanation
The code initializes I2C communication on the SDA and SCL pins defined for NodeMCU (D6 and D7). The lcd.init() function initializes the LCD, 
and the backlight is turned on using lcd.backlight(). The first row displays the message "Hello, From" and the second row displays "NodeMCU!".
Wire.begin(SDA_PIN, SCL_PIN): Initializes I2C communication using the specified SDA and SCL pins (D6 and D7).
lcd.init(): Initializes the LCD.
lcd.backlight(): Turns on the backlight of the LCD.
lcd.clear(): Clears the screen.
lcd.setCursor(x, y): Sets the cursor position on the LCD. The parameters x and y represent the column and row where the cursor will be placed.
lcd.print("Message"): Prints the provided message to the LCD at the current cursor position.


Conclusion
This project demonstrates how to interface an I2C LCD with the NodeMCU (ESP8266) using the LiquidCrystal_I2C library. By using the I2C communication, 
we save GPIO pins and simplify the wiring. The LCD displays a message, and the setup is efficient for small display projects where minimal pins are required. 
This project serves as a foundation for more complex projects that involve displays.
