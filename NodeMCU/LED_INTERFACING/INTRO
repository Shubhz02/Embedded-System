Introduction
This project demonstrates how to blink an LED connected to the NodeMCU (ESP8266) using basic digital I/O. The LED will toggle on and off every second, 
making it blink at a 1-second interval. This is a fundamental project for learning how to control external devices using the NodeMCU.

Working Principle
The NodeMCU (ESP8266) is used to control an LED connected to one of its GPIO pins (in this case, D4). The code configures the pin as an output and 
toggles the LED state between HIGH (off) and LOW (on) with a 1-second delay.

Working Steps:
The LED is turned on by setting the pin to LOW (active low LED).
The LED is then turned off by setting the pin to HIGH.
This cycle repeats every 1 second, creating the blinking effect.


Connections
Connect the LED in series with a 220Ω resistor to the D4 pin on the NodeMCU.
The cathode (short leg) of the LED goes to GND.
The anode (long leg) connects to the resistor, which is then connected to D4 on the NodeMCU.

The pin configuration is as follows:
Component	NodeMCU                     Pin
LED	                                   D4
Resistor	                            220Ω


Code Explanation
> Pin Initialization:
pinMode(LED_Pin, OUTPUT); sets D4 as an output pin for controlling the LED.

> LED Blinking Logic:
In the loop() function:
digitalWrite(LED_Pin, LOW); turns the LED on (since the LED is connected in active-low mode).
delay(1000); introduces a delay of 1 second.
digitalWrite(LED_Pin, HIGH); turns the LED off.
Another delay(1000); introduces another 1-second delay.

This results in the LED blinking with a period of 2 seconds (1 second on, 1 second off).


Conclusion
This simple project demonstrates the use of the NodeMCU (ESP8266) to control an LED. It's an excellent introduction to using digital pins for controlling devices in embedded systems. 
You can extend this project to control more LEDs, create patterns, or use other output devices, like motors or relays.

This example is great for learning basic control with the NodeMCU and is often used as a starting point in microcontroller-based projects.

