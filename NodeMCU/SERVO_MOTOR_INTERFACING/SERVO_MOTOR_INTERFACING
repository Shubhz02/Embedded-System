Introduction
In this project, a servo motor is controlled using the NodeMCU (ESP8266) and a potentiometer. The PWM (Pulse Width Modulation) signal generated by the NodeMCU adjusts 
the angle of the servo motor. By turning the potentiometer, the duty cycle of the PWM signal is modified, which in turn changes the angle of the servo. 
The range of the servo motor is typically from 0° to 180°, and the potentiometer is used to select the position of the servo within this range.

Working Principle
PWM for Servo Control: Servo motors are typically controlled by varying the width of a PWM pulse. The width of the pulse corresponds to the position of the servo. 
A typical servo motor expects a PWM signal at a frequency of 50Hz (i.e., 20ms period), and the width of the pulse typically ranges from 1ms (0°) to 2ms (180°).
Mapping Potentiometer Values: The potentiometer (connected to the A0 pin) provides an analog value between 0 and 1023, which corresponds to the full range of the servo's movement.
The code maps this value to the correct PWM duty cycle range, ensuring the servo motor moves from 0° to 180° smoothly.


Connections
> Servo Motor:
Signal (Control) wire to D2 (GPIO4) pin on the NodeMCU.
VCC pin to 5V or 3.3V on the NodeMCU (depending on your servo motor's voltage rating).
GND pin to GND on the NodeMCU.

> Potentiometer:
VCC pin to 3.3V on the NodeMCU.
GND pin to GND on the NodeMCU.
Wiper (middle pin) to A0 (analog input pin) on the NodeMCU.


Code Explanation
> PWM Frequency: The PWM frequency is set to 50Hz using the analogWriteFreq(50) function. This is the typical frequency required by most servo motors.

> Reading Potentiometer: The potentiometer is connected to the A0 analog input pin. The value from analogRead(A0) is used to control the servo's position.

> Duty Cycle Calculation:
The potentiometer value (ranging from 0 to 1023) is mapped to a range that controls the servo's position (from 25 to 110). 
These values correspond to the PWM duty cycle range needed to control the servo motor's angle.

The formula dutycycle = 25 + ((85 * dutycycle / 1023)) ensures that the PWM duty cycle is mapped to the range that drives the servo motor appropriately.

> Servo Motor Control: The analogWrite(ServoMotorpin, dutycycle) function is used to generate the PWM signal on the D2 pin, 
controlling the servo's position based on the potentiometer input.


Conclusion
This project demonstrates how to control a servo motor with a potentiometer using PWM signals generated by the NodeMCU (ESP8266). By adjusting the potentiometer, 
the PWM duty cycle is changed, which adjusts the angle of the servo motor. This project can be extended for applications such as controlling the position of a robotic arm, 
adjusting camera angles, or even for use in a remote-controlled system.

